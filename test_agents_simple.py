#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
ü§ñ Demonstra√ß√£o do Sistema de Agentes IA
"""

from app.langgraph_chatbot_graph import get_chatbot_graph
from app.database import get_carros
from datetime import datetime

print("="*60)
print("ü§ñ SISTEMA DE AGENTES IA - DEMONSTRA√á√ÉO")
print("="*60)

# Inicializar
print("\n1Ô∏è‚É£ Inicializando sistema LangGraph...")
chatbot = get_chatbot_graph()

print("\n2Ô∏è‚É£ Carregando dados de teste...")
carros = get_carros()
carro = carros[0] if carros else {"id": 1, "modelo": "Fiat Argo", "marca": "Fiat", "ano": 2023}
print(f"   Carro teste: {carro.get('marca')} {carro.get('modelo')} {carro.get('ano')}")

print("\n3Ô∏è‚É£ AGENTES DISPON√çVEIS:")
print("-"*40)
agentes = chatbot.obter_agentes_disponiveis()
for tipo, info in agentes.items():
    print(f"\n{info.get('emoji', 'ü§ñ')} {info['nome']} ({tipo.upper()})")
    if 'especialidades' in info:
        for esp in info['especialidades'][:2]:
            print(f"   ‚Ä¢ {esp}")

print("\n4Ô∏è‚É£ TESTE DE PERGUNTAS:")
print("-"*40)

perguntas_teste = [
    "Qual o consumo deste carro?",
    "Quanto custa a manuten√ß√£o?",
    "√â bom para fam√≠lia?",
    "Vale o pre√ßo?",
    "Como financiar?",
    "√â melhor que o Onix?"
]

for pergunta in perguntas_teste:
    print(f"\n‚ùì '{pergunta}'")
    try:
        resultado = chatbot.processar_pergunta(
            carro_id=carro["id"],
            carro_data=carro,
            pergunta=pergunta,
            conversation_id=f"demo_{datetime.now().timestamp()}",
            user_session_id="demo_user"
        )
        print(f"   ‚Üí Agente: {resultado['agente']}")
        print(f"   ‚Üí Confian√ßa: {resultado['confianca']:.0%}")
        print(f"   ‚Üí Resposta: {resultado['resposta'][:80]}...")
    except Exception as e:
        print(f"   ‚ùå Erro: {e}")

print("\n" + "="*60)
print("‚úÖ Sistema de Agentes IA funcionando perfeitamente!")
print("="*60)